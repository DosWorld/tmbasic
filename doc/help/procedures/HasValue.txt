.procedure HasValue
.category Optionals
.blurb Determines whether an t[Optional] contains a value of the underlying type.
.description
Determines whether an t[Optional] contains a value of the underlying type, or whether it is `none`.
.overload
.parameter this: Optional T
Any t[Optional] value.
.return Boolean
If i[this] contains a value (of type i[T]), then p[HasValue] returns `true`. Otherwise, it returns `false`.
.example
This example shows how p[HasValue] responds to changes in an t[Optional] t[Number] variable.
.example-code
dim x as Optional Number
if not HasValue(x) then print "HasValue is initially false"

let x = 123
if HasValue(x) then print "HasValue is now true"

let x = none
if not HasValue(x) then Print "HasValue is false again"
.example-output
HasValue is initially false
HasValue is now true
HasValue is false again
.
