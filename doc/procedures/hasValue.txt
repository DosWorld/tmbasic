.procedure name:"hasValue"
.overload
.description
Determines whether an t[optional] value has been provided, or whether it is `none`.
.parameter name:"this", type:"optional T"
Any t[optional] value.
.return type:"boolean"
If i[this] contains a value (of type i[T]), then p[hasValue] returns `true`. Otherwise, it returns `false`.
.example
This example shows how p[hasValue] responds to changes in an t[optional] t[integer] variable.
.example-code
dim x as optional integer
if not x.hasValue then print "x.hasValue is initially false"

let x = 123
if x.hasValue then print "x.hasValue is now true"

let x = none
if not x.hasValue then print "x.hasValue is false again"
.example-output
x.hasValue is initially false
x.hasValue is now true
x.hasValue is false again
.
