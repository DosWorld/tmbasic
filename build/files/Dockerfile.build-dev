FROM ubuntu:20.04

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        curl \
        wget \
        software-properties-common \
        apt-transport-https \
        make \
        git \
        openssl \
        libssl-dev \
        cmake \
        dpkg-dev \
        libboost-dev \
        valgrind \
        libgtest-dev \
        python3 \
        python3-pip \
        unzip \
        dos2unix \
        pandoc \
        xxd \
        libncursesw5 \
        libncursesw5-dev \
        nodejs \
        npm \
        language-pack-en

# unprivileged user
RUN mkdir -p /code && \
    groupadd -g $HOST_GID $USER && \
    useradd -r -u $HOST_UID -g $HOST_GID $USER && \
    chown $HOST_UID:$HOST_GID /code && \
    mkdir -p /home/$USER && \
    chown $HOST_UID:$HOST_GID /home/$USER

# clang-format, clang-tidy
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
    add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main" && \
    apt-get update -y && \
    apt-get install -y clang-format-10 clang-tidy-10 && \
    update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-10 9999 && \
    update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-10 9999

# gtest
RUN cd /usr/src/gtest && \
    cmake CMakeLists.txt && \
    make -j 2 && \
    mv lib/*.a /usr/lib/

# mpdecimal
RUN cd /tmp && \
    curl -L -o mpdecimal.tar.gz https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-2.5.1.tar.gz && \
    tar zxf mpdecimal.tar.gz && \
    cd mpdecimal-*/ && \
    ./configure && \
    make && \
    make install && \
    cp -rf /usr/local/lib/libmpdec* /lib/*-linux-gnu/

# cpplint
RUN pip3 install cpplint

# immer
RUN cd /tmp && \
    curl -L -o immer.zip https://github.com/arximboldi/immer/archive/800ddb04e528a3e83e69e8021d7e872e7c34cbcd.zip && \
    unzip -q immer.zip && \
    mv immer-*/ immer/ && \
    mkdir -p immer/build && \
    cd immer/build && \
    cmake .. && \
    make -j2 && \
    make install

# tvision
RUN cd /tmp && \
    curl -L -o tvision.zip https://github.com/magiblot/tvision/archive/c5b5fb7427c5b488a63271b0a280541de03caf5c.zip && \
    unzip -q tvision.zip && \
    mv tvision-*/ tvision/ && \
    mkdir -p tvision/build && \
    cd tvision/build && \
    cmake .. -DTV_BUILD_USING_GPM=OFF -DCMAKE_BUILD_TYPE=Release && \
    make -j2 && \
    make install

# bzip2
RUN cd /tmp && \
    curl -L -o bzip2.zip https://gitlab.com/federicomenaquintero/bzip2/-/archive/6211b6500c8bec13a17707440d3a84ca8b34eed5/bzip2-6211b6500c8bec13a17707440d3a84ca8b34eed5.zip && \
    unzip -q bzip2.zip && \
    mv bzip2-*/ bzip2/ && \
    mkdir -p bzip2/build && \
    cd bzip2/build && \
    cmake .. -DENABLE_STATIC_LIB=ON && \
    make -j2 && \
    make install

# bsdiff
RUN cd /tmp && \
    curl -L -o bsdiff.zip https://github.com/mendsley/bsdiff/archive/b817e9491cf7b8699c8462ef9e2657ca4ccd7667.zip && \
    unzip -q bsdiff.zip && \
    mv bsdiff-*/ bsdiff/ && \
    cd bsdiff && \
    gcc -o bsdiff bsdiff.c -DBSDIFF_EXECUTABLE -lbz2 && \
    gcc -o bspatch bspatch.c -DBSPATCH_EXECUTABLE -lbz2 && \
    mv bsdiff bspatch /usr/bin/ && \
    gcc -c bsdiff.c && \
    ar rcs libbsdiff.a bsdiff.o && \
    mv libbsdiff.a /usr/lib/ && \
    gcc -c bspatch.c && \
    ar rcs libbspatch.a bspatch.o && \
    mv libbspatch.a /usr/lib/ && \
    mkdir -p /usr/include/bsdiff && \
    cp *.h /usr/include/bsdiff/

# doctoc
RUN npm install -g doctoc

# icu
RUN cd /tmp && \
    curl -L -o icu.tar.gz https://github.com/unicode-org/icu/releases/download/release-68-2/icu4c-68_2-src.tgz && \
    tar zxf icu.tar.gz && \
    cd icu/source && \
    CXXFLAGS="-DU_USING_ICU_NAMESPACE=0 -DU_NO_DEFAULT_INCLUDE_UTF_HEADERS=1 -DU_HIDE_OBSOLETE_UTF_OLD_H=1 -std=c++17" \
        ./runConfigureICU "Linux/gcc" --enable-static --disable-shared --disable-tests --disable-samples \
        --with-data-packaging=static && \
    make -j2 && \
    make install

# environment
USER $HOST_UID
COPY devPrompt.sh /home/$USER/
RUN echo "export ARCH=\"$ARCH\"" >> /home/$USER/.bashrc && \
    echo "export IMAGE_NAME=\"$IMAGE_NAME\"" >> /home/$USER/.bashrc && \
    echo "export PS1=\"[$IMAGE_NAME] \w\$ \"" >> /home/$USER/.bashrc && \
    echo "export MAKEFLAGS=\"-j2\"" >> /home/$USER/.bashrc && \
    echo "export TARGET_OS=linux" >> /home/$USER/.bashrc && \
    echo "export LINUX_DISTRO=ubuntu" >> /home/$USER/.bashrc && \
    echo "alias dev='/home/$USER/devPrompt.sh'" >> /home/$USER/.bashrc && \
    echo "make -f /code/Makefile help" >> /home/$USER/.bashrc

ENTRYPOINT "/bin/bash"
