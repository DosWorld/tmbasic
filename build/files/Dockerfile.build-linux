FROM $DOCKER_ARCH/alpine:3.13

RUN apk update && \
    apk upgrade && \
    apk add \
        bash \
        build-base \
        cmake \
        curl \
        gtest-dev \
        linux-headers \
        make \
        pkgconfig \
        xxd \
        python3

# unprivileged user
RUN (addgroup -g $HOST_GID user || true) && \
    (adduser -h /home/user -s /bin/bash -g $HOST_GID -u $HOST_UID -D user || true)

# ncurses
RUN curl -L -o /tmp/ncurses.tar.gz https://invisible-mirror.net/archives/ncurses/ncurses-6.2.tar.gz && \
    cd /tmp && \
    tar zxf ncurses.tar.gz && \
    mv ncurses-*/ ncurses && \
    cd ncurses && \
    mkdir build && \
    cd build && \
    ../configure && \
    make -j$(nproc) -C include && \
    make -j$(nproc) -C progs tic && \
    make -j$(nproc) -C progs infocmp && \
    cd /tmp/ncurses && \
    ./configure \
        --with-fallbacks=ansi,cons25,cons25-debian,dumb,hurd,linux,rxvt,screen,screen-256color,screen-256color-bce,screen-bce,screen-s,screen-w,screen.xterm-256color,tmux,tmux-256color,vt100,vt102,vt220,vt52,xterm,xterm-256color,xterm-color,xterm-mono,xterm-r5,xterm-r6,xterm-vt220,xterm-xfree86 \
        --disable-database \
        --without-ada \
        --without-tests \
        --disable-termcap \
        --disable-rpath-hack \
        --disable-stripping \
        --with-pkg-config-libdir=/usr/lib/pkgconfig \
        --without-cxx-binding \
        --with-terminfo-dirs="/usr/share/terminfo" \
        --enable-pc-files \
        --with-static \
        --enable-widec \
        --without-debug \
        --with-infocmp-path=/tmp/ncurses/build/progs/infocmp \
        --with-tic-path=/tmp/ncurses/build/progs/tic \
        && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/ncurses.tar.gz /tmp/ncurses/

# bzip2
RUN curl -L -o /tmp/bzip2.zip https://gitlab.com/federicomenaquintero/bzip2/-/archive/6211b6500c8bec13a17707440d3a84ca8b34eed5/bzip2-6211b6500c8bec13a17707440d3a84ca8b34eed5.zip && \
    cd /tmp && \
    unzip -q bzip2.zip && \
    mv bzip2-*/ bzip2/ && \
    mkdir -p bzip2/build && \
    cd bzip2/build && \
    cmake .. -DENABLE_STATIC_LIB=ON -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/bzip2.zip /tmp/bzip2/

# bsdiff
RUN curl -L -o /tmp/bsdiff.zip https://github.com/mendsley/bsdiff/archive/b817e9491cf7b8699c8462ef9e2657ca4ccd7667.zip && \
    cd /tmp && \
    unzip -q bsdiff.zip && \
    mv bsdiff-*/ bsdiff/ && \
    cd bsdiff && \
    gcc -o bsdiff bsdiff.c -DBSDIFF_EXECUTABLE -lbz2 && \
    gcc -o bspatch bspatch.c -DBSPATCH_EXECUTABLE -lbz2 && \
    mv bsdiff bspatch /usr/bin/ && \
    gcc -c bsdiff.c && \
    ar rcs libbsdiff.a bsdiff.o && \
    mv libbsdiff.a /usr/lib/ && \
    gcc -c bspatch.c && \
    ar rcs libbspatch.a bspatch.o && \
    mv libbspatch.a /usr/lib/ && \
    mkdir -p /usr/include/bsdiff && \
    cp *.h /usr/include/bsdiff/ && \
    rm -rf /tmp/bsdiff.zip /tmp/bsdiff/

# icu
RUN curl -L -o /tmp/icu.tar.gz https://github.com/unicode-org/icu/releases/download/release-68-2/icu4c-68_2-src.tgz && \
    cd /tmp && \
    tar zxf icu.tar.gz && \
    cd icu/source && \
    CXXFLAGS="-DU_USING_ICU_NAMESPACE=0 -DU_NO_DEFAULT_INCLUDE_UTF_HEADERS=1 -DU_HIDE_OBSOLETE_UTF_OLD_H=1 -std=c++17" \
        ./runConfigureICU "Linux/gcc" --enable-static --disable-shared --disable-tests --disable-samples \
        --with-data-packaging=static && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/icu.tar.gz /tmp/icu/

# xorgproto
RUN curl -L -o /tmp/xorgproto.tar.gz https://xorg.freedesktop.org/archive/individual/proto/xorgproto-2021.3.tar.gz && \
    cd /tmp && \
    tar zxf xorgproto.tar.gz && \
    mv xorgproto-*/ xorgproto/ && \
    cd xorgproto && \
    ./configure && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/xorgproto.tar.gz /tmp/xorgproto/

# libXau
RUN curl -L -o /tmp/libXau.tar.gz https://xorg.freedesktop.org/archive/individual/lib/libXau-1.0.9.tar.gz && \
    cd /tmp && \
    tar zxf libXau.tar.gz && \
    mv libXau-*/ libXau/ && \
    cd libXau && \
    ./configure --enable-static && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/libXau.tar.gz /tmp/libXau/

# xcb-proto
RUN curl -L -o /tmp/xcb-proto.tar.gz https://xorg.freedesktop.org/archive/individual/xcb/xcb-proto-1.14.tar.gz && \
    cd /tmp && \
    tar zxf xcb-proto.tar.gz && \
    mv xcb-proto-*/ xcb-proto/ && \
    cd xcb-proto && \
    ./configure && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/xcb-proto.tar.gz /tmp/xcb-proto/

# libxcb
RUN curl -L -o /tmp/libxcb.tar.gz https://xorg.freedesktop.org/archive/individual/lib/libxcb-1.14.tar.gz && \
    cd /tmp && \
    tar zxf libxcb.tar.gz && \
    mv libxcb-*/ libxcb/ && \
    cd libxcb && \
    ./configure --enable-static && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/libxcb.tar.gz /tmp/libxcb/

# fmt
RUN curl -L -o /tmp/fmt.zip https://github.com/fmtlib/fmt/releases/download/7.1.3/fmt-7.1.3.zip && \
    cd /tmp && \
    unzip -q fmt.zip && \
    mv fmt-*/ fmt/ && \
    mkdir -p fmt/build && \
    cd fmt/build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DFMT_TEST=OFF -DFMT_FUZZ=OFF -DFMT_CUDA_TEST=OFF -DFMT_DOC=OFF && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/fmt.zip /tmp/fmt/

# libclipboard
RUN curl -L -o /tmp/libclipboard.zip https://github.com/jtanx/libclipboard/archive/refs/tags/v1.1.zip && \
    cd /tmp && \
    unzip -q libclipboard.zip && \
    mv libclipboard-*/ libclipboard/ && \
    mkdir -p libclipboard/build && \
    cd libclipboard/build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/libclipboard.zip /tmp/libclipboard/

# immer
RUN curl -L -o /tmp/immer.zip https://github.com/arximboldi/immer/archive/4d1caac17daaea58b949e30c6b1d5d5b88a3b78e.zip && \
    cd /tmp && \
    unzip -q immer.zip && \
    mv immer-*/ immer/ && \
    mkdir -p immer/build && \
    cd immer/build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/immer.zip /tmp/immer/

# boost
RUN curl -L -o /tmp/boost.tar.gz https://dl.bintray.com/boostorg/release/1.75.0/source/boost_1_75_0.tar.gz && \
    cd /tmp && \
    tar zxf boost.tar.gz && \
    mv boost_*/boost /usr/include/ && \
    rm -rf /tmp/boost.tar.gz /tmp/boost_*/

# mpdecimal
RUN curl -L -o /tmp/mpdecimal.tar.gz https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-2.5.1.tar.gz && \
    cd /tmp && \
    tar zxf mpdecimal.tar.gz && \
    cd mpdecimal-*/ && \
    ./configure && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/mpdecimal.tar.gz /tmp/mpdecimal/

# tvision
RUN curl -L -o /tmp/tvision.zip https://github.com/magiblot/tvision/archive/290ccbaa9fc7e3c8278b632a28291d0b0154ed3b.zip && \
    cd /tmp && \
    unzip -q tvision.zip && \
    mv tvision-*/ tvision/ && \
    mkdir -p tvision/build && \
    cd tvision/build && \
    cmake .. -DTV_BUILD_USING_GPM=OFF -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/tvision.zip /tmp/tvision/

# turbo
COPY turbo-CMakeLists.txt.diff /tmp/turbo-CMakeLists.txt.diff
RUN curl -L -o /tmp/turbo.zip https://github.com/magiblot/turbo/archive/2b930c017f4324c4ca42d63eeb1d82f09190faba.zip && \
    cd /tmp && \
    unzip -q turbo.zip && \
    mv turbo-*/ turbo/ && \
    cd turbo && \
    mv scintilla/lexers/LexBasic.cxx . && \
    rm -f scintilla/lexers/* && \
    mv -f LexBasic.cxx scintilla/lexers/LexBasic.cxx && \
    cat scintilla/src/Catalogue.cxx | sed 's:LINK_LEXER(lm.*::g; s:return 1;:LINK_LEXER(lmFreeBasic); return 1;:g' > Catalogue.cxx && \
    mv -f Catalogue.cxx scintilla/src/Catalogue.cxx && \
    cat deps/CMakeLists.txt | sed 's:add_subdirectory:#:g' > deps-CMakeLists.txt && \
    mv -f deps-CMakeLists.txt deps/CMakeLists.txt && \
    patch CMakeLists.txt /tmp/turbo-CMakeLists.txt.diff && \
    mkdir build && \
    cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DTURBO_USE_SYSTEM_TVISION=ON && \
    make -j$(nproc) && \
    cp -f *.a /usr/lib/ && \
    mkdir /usr/include/turbo && \
    cp $(find /tmp/turbo -name '*.h') /usr/include/turbo/

# environment
RUN echo "export ARCH=\"$ARCH\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export IMAGE_NAME=\"$IMAGE_NAME\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export PS1=\"[$IMAGE_NAME] \w\$ \"" >> /etc/profile.d/tmbasic.sh && \
    echo "export MAKEFLAGS=\"-j$(nproc)\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export TARGET_OS=linux" >> /etc/profile.d/tmbasic.sh && \
    echo "export LINUX_DISTRO=alpine" >> /etc/profile.d/tmbasic.sh && \
    echo "make -f /code/Makefile help" >> /etc/profile.d/tmbasic.sh && \
    chmod +x /etc/profile.d/tmbasic.sh

USER $HOST_UID
ENTRYPOINT ["/bin/bash", "-l"]
