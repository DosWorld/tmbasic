FROM ubuntu:20.04

# mingw - build steps adapted from https://github.com/mmozeiko/docker-mingw-w64/blob/master/Dockerfile
ENV MINGW=/mingw
ARG PKG_CONFIG_VERSION=0.29.2
ARG CMAKE_VERSION=3.20.1
ARG BINUTILS_VERSION=2.36.1
ARG MINGW_VERSION=8.0.0
ARG GCC_VERSION=10.3.0
ARG NASM_VERSION=2.15.05
SHELL [ "/bin/bash", "-c" ]

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --no-install-recommends -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        bison \
        bzip2 \
        ca-certificates \
        curl \
        file \
        flex \
        g++-10 \
        gcc-10 \
        git \
        gnupg \
        gperf \
        libgmp-dev \
        libgmp10 \
        libisl-dev \
        libisl22 \
        libmpc-dev \
        libmpc3 \
        libmpfr-dev \
        libmpfr6 \
        libssl-dev \
        libssl1.1 \
        make \
        meson \
        ninja-build \
        patch \
        python \
        python-lxml \
        python-mako \
        texinfo \
        xz-utils \
        yasm \
        zip \
        zlib1g-dev && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 1000 --slave /usr/bin/g++ g++ /usr/bin/g++-10 && \
    \
    curl -L https://pkg-config.freedesktop.org/releases/pkg-config-${PKG_CONFIG_VERSION}.tar.gz | tar -xz && \
    curl -L http://mirrors.ibiblio.org/gnu/ftp/gnu/binutils/binutils-${BINUTILS_VERSION}.tar.xz | tar -xJ && \
    curl -L https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/mingw-w64-v${MINGW_VERSION}.tar.bz2 | tar -xj && \
    curl -L http://mirrors.ibiblio.org/gnu/ftp/gnu/gcc/gcc-${GCC_VERSION}/gcc-${GCC_VERSION}.tar.xz | tar -xJ && \
    curl -L https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz | tar -xJ && \
    curl -L https://raw.githubusercontent.com/msys2/MINGW-packages/master/mingw-w64-gcc/0020-libgomp-Don-t-hard-code-MS-printf-attributes.patch \
        | patch -d gcc-${GCC_VERSION} -p 1 && \
    \
    mkdir -p ${MINGW}/include ${MINGW}/lib/pkgconfig && \
    chmod 0777 -R /mnt ${MINGW} && \
    cd pkg-config-${PKG_CONFIG_VERSION} && \
    ./configure \
        --prefix=/usr \
        --with-pc-path=${MINGW}/lib/pkgconfig \
        --with-internal-glib \
        --disable-shared \
        --disable-nls && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    \
    cd binutils-${BINUTILS_VERSION} && \
    ./configure \
        --prefix=/usr \
        --target=$ARCH-w64-mingw32 \
        --disable-shared \
        --enable-static \
        --disable-lto \
        --disable-plugins \
        --disable-multilib \
        --disable-nls \
        --disable-werror \
        --with-system-zlib && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    \
    mkdir mingw-w64 && \
    cd mingw-w64 && \
    ../mingw-w64-v${MINGW_VERSION}/mingw-w64-headers/configure \
        --prefix=/usr/$ARCH-w64-mingw32 \
        --host=$ARCH-w64-mingw32 \
        --enable-sdk=all \
        --enable-secure-api && \
    make install && \
    cd .. && \
    \
    mkdir gcc && \
    cd gcc && \
    ../gcc-${GCC_VERSION}/configure \
        --prefix=/usr \
        --target=$ARCH-w64-mingw32 \
        --enable-languages=c,c++ \
        --disable-shared \
        --enable-static \
        --enable-threads=posix \
        --with-system-zlib \
        --enable-libgomp \
        --enable-libatomic \
        --enable-graphite \
        --disable-libstdcxx-pch \
        --disable-libstdcxx-debug \
        --disable-multilib \
        --disable-lto \
        --disable-nls \
        --disable-werror && \
    make -j$(nproc) all-gcc && \
    make install-gcc && \
    cd .. && \
    \
    cd mingw-w64 && \
    ../mingw-w64-v${MINGW_VERSION}/mingw-w64-crt/configure \
        --prefix=/usr/$ARCH-w64-mingw32 \
        --host=$ARCH-w64-mingw32 \
        --enable-wildcard \
        $LIB3264 && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    \
    cd mingw-w64 && \
    ../mingw-w64-v${MINGW_VERSION}/mingw-w64-libraries/winpthreads/configure \
        --prefix=/usr/$ARCH-w64-mingw32 \
        --host=$ARCH-w64-mingw32 \
        --enable-static \
        --disable-shared && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    \
    cd gcc && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    \
    cd nasm-${NASM_VERSION} && \
    ./configure --prefix=/usr && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    \
    rm -r pkg-config-${PKG_CONFIG_VERSION} && \
    rm -r binutils-${BINUTILS_VERSION} && \
    rm -r mingw-w64 mingw-w64-v${MINGW_VERSION} && \
    rm -r gcc gcc-${GCC_VERSION} && \
    rm -r nasm-${NASM_VERSION} && \
    apt-get remove --purge -y \
        file gcc-10 g++-10 zlib1g-dev libssl-dev libgmp-dev libmpfr-dev libmpc-dev libisl-dev python-lxml python-mako

# unprivileged user
RUN mkdir -p /code && \
    (groupadd -g $HOST_GID user || true) && \
    (useradd -r -u $HOST_UID -g $HOST_GID user || true) && \
    chown $HOST_UID:$HOST_GID /code && \
    mkdir -p /home/user && \
    chown $HOST_UID:$HOST_GID /home/user

# extra utilities
RUN apt-get install -y \
        unzip \
        xxd \
        diffutils \
        dos2unix \
        build-essential \
        libncursesw5-dev \
        libncursesw5

# install wine if the host is x86_64, don't bother if the host is aarch64
$WINE_INSTALL

# tmbasic dependencies
COPY deps.mk /tmp/deps.mk
COPY toolchain-cross-mingw64-linux-$ARCH.cmake /tmp/
RUN mkdir -p /tmp/deps && \
    cd /tmp/deps && \
    NATIVE_PREFIX=/usr \
        TARGET_PREFIX=/usr/$ARCH-w64-mingw32 \
        ARCH=$ARCH \
        TARGET_OS=win \
        TARGET_CC=$ARCH-w64-mingw32-gcc \
        TARGET_AR=$ARCH-w64-mingw32-ar \
        make -j$(nproc) -f /tmp/deps.mk && \
    rm -rf /tmp/deps /tmp/deps.mk

# environment
RUN echo "export ARCH=\"$ARCH\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export IMAGE_NAME=\"$IMAGE_NAME\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export PS1=\"[$IMAGE_NAME] \w\$ \"" >> /etc/profile.d/tmbasic.sh && \
    echo "export MAKEFLAGS=\"-j$(nproc)\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export TARGET_OS=win" >> /etc/profile.d/tmbasic.sh && \
    echo "make -f /code/Makefile help" >> /etc/profile.d/tmbasic.sh && \
    chmod +x /etc/profile.d/tmbasic.sh

USER $HOST_UID
ENTRYPOINT ["/bin/bash", "-l"]
