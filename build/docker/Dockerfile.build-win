FROM $BASE_IMAGE_NAME

RUN mkdir -p /code && \
    groupadd -g $HOST_GID $USER && \
    useradd -r -u $HOST_UID -g $HOST_GID $USER && \
    chown $HOST_UID:$HOST_GID /code && \
    mkdir -p /home/$USER && \
    chown $HOST_UID:$HOST_GID /home/$USER

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        curl \
        wget \
        software-properties-common \
        apt-transport-https \
        make \
        git \
        openssl \
        libssl-dev \
        cmake \
        dpkg-dev \
        libboost-dev \
        libgtest-dev \
        mingw-w64 \
        wine64 \
        zstd \
        libgtest-dev \
        dos2unix

# clang-format
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
    add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main" && \
    apt-get update -y && \
    apt-get install -y clang-format-10 && \
    update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-10 9999

# node
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
    apt-get install -y nodejs

# ncurses, gtest
RUN cd /tmp && \
    curl -sL -o ncurses.pkg.tar.zst https://repo.msys2.org/mingw/x86_64/mingw-w64-x86_64-ncurses-6.2-2-any.pkg.tar.zst && \
    unzstd ncurses.pkg.tar.zst && \
    tar xf ncurses.pkg.tar && \
    curl -o gtest.pkg.tar.xz https://repo.msys2.org/mingw/x86_64/mingw-w64-x86_64-gtest-1.10.0-1-any.pkg.tar.xz && \
    unzstd gtest.pkg.tar.xz && \
    tar xf gtest.pkg.tar && \
    cd mingw64 && \
    cp -rf ./* /usr/x86_64-w64-mingw32/ && \
    rm -rf /tmp/mingw64 /tmp/*.tar* && \
    cp /usr/x86_64-w64-mingw32/bin/libgtest*.dll /usr/lib/gcc/x86_64-w64-mingw32/9.3-win32/

# mpdecimal
RUN cd /tmp && \
    curl -L -o mpdecimal.tar.gz http://www.bytereef.org/software/mpdecimal/releases/mpdecimal-2.5.0.tar.gz && \
    tar zxf mpdecimal.tar.gz && \
    cd mpdecimal-2.5.0 && \
    ./configure --host=x86_64-w64-mingw32 && \
    cd libmpdec && \
    make libmpdec.a -j2 && \
    cp -f libmpdec.a /usr/x86_64-w64-mingw32/lib/ && \
    mkdir -p /usr/include/libmpdec && \
    cp -f *.h /usr/include/libmpdec/ && \
    cd ../libmpdec++ && \
    make libmpdec++.a -j2 && \
    cp -f libmpdec++.a /usr/x86_64-w64-mingw32/lib/ && \
    mkdir -p /usr/include/libmpdec++ && \
    cp -f *.hh /usr/include/libmpdec++/ && \
    rm -rf /tmp/*.tar*

# boost
RUN ln -s /usr/include/boost /usr/share/mingw-w64/include/

# wine32
RUN dpkg --add-architecture i386 && apt-get update -y && apt-get install -y wine32

USER $HOST_UID

RUN echo "export PS1=\"[$IMAGE_NAME] \w\$ \"" > /home/$USER/.bashrc && \
    echo "make -f /code/Makefile help" >> /home/$USER/.bashrc && \
    echo "export MAKEFLAGS=\"-j2\"" >> /home/$USER/.bashrc && \
    echo "export BUILDCC=gcc" >> /home/$USER/.bashrc && \
    echo "export CC=x86_64-w64-mingw32-gcc" >> /home/$USER/.bashrc && \
    echo "export CXX=x86_64-w64-mingw32-g++" >> /home/$USER/.bashrc && \
    echo "export AR=x86_64-w64-mingw32-ar" >> /home/$USER/.bashrc && \
    echo "export STRIP=x86_64-w64-mingw32-strip" >> /home/$USER/.bashrc && \
    echo "export WIN_INCLUDE_FLAGS=\"-I/usr/share/mingw-w64/include/\"" >> /home/$USER/.bashrc && \
    echo "export TVHC=\"WINEPATH=/usr/lib/gcc/x86_64-w64-mingw32/9.3-win32 wine64 obj/tvision/tvhc.exe\"" >> /home/$USER/.bashrc && \
    echo "export LIBGTEST_FLAG=\"/usr/x86_64-w64-mingw32/lib/libgtest.dll.a /usr/x86_64-w64-mingw32/lib/libgtest_main.dll.a\"" >> /home/$USER/.bashrc && \
    echo "export LIBTINFO_FLAG=\"\"" >> /home/$USER/.bashrc && \
    echo "export LIBMPDEC_FLAG=\"/usr/x86_64-w64-mingw32/lib/libmpdec.a /usr/x86_64-w64-mingw32/lib/libmpdec++.a\"" >> /home/$USER/.bashrc && \
    echo "export LICENSE_PROCESS_CMD=unix2dos" >> /home/$USER/.bashrc && \
    echo "export TARGET_OS=win" >> /home/$USER/.bashrc && \
    echo "export EXE_EXTENSION=.exe" >> /home/$USER/.bashrc && \
    echo "export OPTFLAGS=-Os" >> /home/$USER/.bashrc && \
    echo "export TEST_CMD=\"WINEPATH=/usr/lib/gcc/x86_64-w64-mingw32/9.3-win32 wine64 test.exe\"" >> /home/$USER/.bashrc

ENTRYPOINT "/bin/bash"
