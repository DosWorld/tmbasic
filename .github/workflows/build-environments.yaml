name: Build Environments
on: workflow_dispatch

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux-arm64
            arch: arm64v8
            os: linux
          - platform: linux-arm32
            arch: arm32v7
            os: linux
          - platform: linux-x64
            arch: x86_64
            os: linux
          - platform: linux-x86
            arch: i686
            os: linux
    name: ${{ matrix.platform }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_OUTPUT: json
          USE_R2_MIRROR: 1
        run: |
          set -euxo pipefail
          find . -type f -name "*.sh" -exec chmod +x {} \;

          cd build
          echo "Downloading Linux System Root."
          ARCH=${{ matrix.arch }} scripts/sysrootDownload.sh

          echo "Building container."
          export TIMESTAMP=$(date -u "+%Y%m%d%H%M%S")
          export IMAGE_TAG=${{ matrix.platform }}-$TIMESTAMP
          export IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/tmbasic-build-env:$IMAGE_TAG"
          export PUSH_ONLY=1
          ./${{ matrix.platform }}.sh

          echo "Finished building container: $IMAGE_NAME"

  build-win:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - platform: win-arm64
          - platform: win-x64
          - platform: win-x86
    name: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install AWS CLI
        shell: pwsh
        run: |
          curl.exe -Lo AWSCLIV2.msi "https://awscli.amazonaws.com/AWSCLIV2.msi"
          Start-Process msiexec.exe -Wait -ArgumentList '/i AWSCLIV2.msi /qn'

      - name: Build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_OUTPUT: json
        run: |
          $ErrorActionPreference = "Stop"

          Write-Host "Building environment."
          build\${{ matrix.platform }}.ps1 -BuildDeps -BuildType Release -UseR2Mirror

          Write-Host "Archiving environment."
          $timestamp = Get-Date -Format "yyyyMMddHHmmss" -AsUTC
          $filename = "tmbasic-build-env-${{ matrix.platform }}-$timestamp.zip"
          Compress-Archive -Path "${{ matrix.platform }}", "win-native" -DestinationPath "$filename"

          Write-Host "Uploading environment."
          $s3Url = "s3://tmbasic-archive/win-build-envs/$filename"

          $env:AWS_RETRY_MODE = "standard"
          $env:AWS_MAX_ATTEMPTS = "20"
          aws s3 cp "$filename" "$s3Url" --endpoint-url https://367bdafee4af5175025295154f92e84a.r2.cloudflarestorage.com

          Write-Host "Finished building environment: $s3Url"

  build-mac:
    # Our build process requires an M1 Mac; it won't work on an Intel Mac.
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - platform: mac-arm64
            short_arch: arm64
          - platform: mac-x64
            short_arch: x64
    name: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_OUTPUT: json
          USE_R2_MIRROR: 1
        run: |
          set -euxo pipefail
          find . -type f -name "*.sh" -exec chmod +x {} \;

          # https://github.com/actions/runner-images/issues/8613
          echo "Installing AWSCLI."
          brew install awscli

          echo "Installing GNU sed."
          brew install gnu-sed
          export PATH="$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$PATH"

          echo "Building environment."
          pushd build
          ./${{ matrix.platform }}.sh
          popd

          echo "Archiving environment."
          export TIMESTAMP=$(date -u "+%Y%m%d%H%M%S")
          export FILENAME=tmbasic-build-env-${{ matrix.platform }}-$TIMESTAMP.tar.gz
          tar zcf "../$FILENAME" "mac-${{ matrix.short_arch }}"

          echo "Uploading environment tarball."
          export S3_URL="s3://tmbasic-archive/mac-build-envs/$FILENAME"
          export AWS_RETRY_MODE=standard
          export AWS_MAX_ATTEMPTS=20
          aws s3 cp "../$FILENAME" $S3_URL --endpoint-url https://367bdafee4af5175025295154f92e84a.r2.cloudflarestorage.com

          echo "Finished building environment: $S3_URL"
